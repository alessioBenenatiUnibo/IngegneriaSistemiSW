System pong
 
Dispatch ball : ball(N) "info exchanged by the players"

//FOR TESTING
Dispatch ballview : ball(N)  "observed info | payload not mandatory"
Request info      : info(X)  "sent by the testUnit to the observer"
Reply   obsinfo   : obsinfo(X) for info
 
Dispatch endgame : endgame(X) "sent as an automsg by the observer"
 
Context ctxping  ip [host="ping" port=8014] 
Context ctxpong  ip [host="localhost" port=8015]

ExternalQActor ping context ctxping

QActor pong context ctxpong {  
	[#  val TMAX = 10000L #]
	State s0 initial{
		println("$name STARTS") color green
	} 
	Transition t0 
	    //whenTimeVar TMAX -> endofexchange
		whenMsg ball     -> reply
	
	State reply{
		onMsg( ball : ball(X)){
			[# val N = payloadArg(0).toInt() #]
			println("$name receives $N") color green
			if [# N <= 4 #]{
				delay 500
				forward ping -m ball : ball($N)
			}//no forward if N == 5			
		}		
	}
	Transition t0 
		whenTimeVar TMAX -> endofexchange
		whenMsg ball     -> reply	

	State endofexchange{
		println("$name ENDS ") color green
		
	}
}